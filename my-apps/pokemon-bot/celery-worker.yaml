apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: pokemon
  labels:
    app: celery
    argocd.argoproj.io/instance: pokemon-bot
  annotations:
    argocd.argoproj.io/tracking-id: pokemon-bot:apps/Deployment:pokemon/celery-worker
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"pokemon-bot:apps/Deployment:pokemon/celery-worker"},"labels":{"app":"celery","argocd.argoproj.io/instance":"pokemon-bot"},"name":"celery-worker","namespace":"pokemon"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"celery"}},"template":{"metadata":{"labels":{"app":"celery"}},"spec":{"containers":[{"args":["-A","worker","worker","--loglevel=info","--concurrency=2","-Q","default"],"command":["celery"],"env":[{"name":"CELERY_BROKER_URL","value":"redis://redis:6379/0"}],"image":"dspinozz/celery-headless-agent:latest","imagePullPolicy":"IfNotPresent","name":"celery"}]}}}}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app: celery
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: celery
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-05-28T16:22:46Z"
    spec:
      containers:
        - name: celery
          image: dspinozz/celery-headless-agent:latest
          imagePullPolicy: IfNotPresent
          command:
            - celery
          args:
            - -A
            - worker
            - worker
            - --loglevel=info
            - --concurrency=2
            - -Q
            - default
          env:
            - name: CELERY_BROKER_URL
              value: redis://redis:6379/0
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
